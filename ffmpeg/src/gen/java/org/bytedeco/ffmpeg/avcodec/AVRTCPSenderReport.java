// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.ffmpeg.avcodec;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.ffmpeg.avutil.*;
import static org.bytedeco.ffmpeg.global.avutil.*;
import org.bytedeco.ffmpeg.swresample.*;
import static org.bytedeco.ffmpeg.global.swresample.*;

import static org.bytedeco.ffmpeg.global.avcodec.*;


/**
 * RTCP SR (Sender Report) information
 *
 * The received sender report information for an RTSP
 * stream, exposed as AV_PKT_DATA_RTCP_SR side data.
 */
@Properties(inherit = org.bytedeco.ffmpeg.presets.avcodec.class)
public class AVRTCPSenderReport extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public AVRTCPSenderReport() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public AVRTCPSenderReport(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AVRTCPSenderReport(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public AVRTCPSenderReport position(long position) {
        return (AVRTCPSenderReport)super.position(position);
    }
    @Override public AVRTCPSenderReport getPointer(long i) {
        return new AVRTCPSenderReport((Pointer)this).offsetAddress(i);
    }

    /** Synchronization source identifier */
    public native @Cast("uint32_t") int ssrc(); public native AVRTCPSenderReport ssrc(int setter);
    /** NTP time when the report was sent */
    public native @Cast("uint64_t") long ntp_timestamp(); public native AVRTCPSenderReport ntp_timestamp(long setter);
    /** RTP time when the report was sent */
    public native @Cast("uint32_t") int rtp_timestamp(); public native AVRTCPSenderReport rtp_timestamp(int setter);
    /** Total number of packets sent */
    public native @Cast("uint32_t") int sender_nb_packets(); public native AVRTCPSenderReport sender_nb_packets(int setter);
    /** Total number of bytes sent (excluding headers or padding) */
    public native @Cast("uint32_t") int sender_nb_bytes(); public native AVRTCPSenderReport sender_nb_bytes(int setter);
}
