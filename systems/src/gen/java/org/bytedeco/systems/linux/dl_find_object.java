// Targeted by JavaCPP version 1.5.12: DO NOT EDIT THIS FILE

package org.bytedeco.systems.linux;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.linux.*;


@Properties(inherit = org.bytedeco.systems.presets.linux.class)
public class dl_find_object extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public dl_find_object() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public dl_find_object(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public dl_find_object(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public dl_find_object position(long position) {
        return (dl_find_object)super.position(position);
    }
    @Override public dl_find_object getPointer(long i) {
        return new dl_find_object((Pointer)this).offsetAddress(i);
    }

  public native @Cast("unsigned long long int") long dlfo_flags(); public native dl_find_object dlfo_flags(long setter);
  public native Pointer dlfo_map_start(); public native dl_find_object dlfo_map_start(Pointer setter);		/* Beginning of mapping containing address.  */
  public native Pointer dlfo_map_end(); public native dl_find_object dlfo_map_end(Pointer setter);		/* End of mapping.  */
  public native @Cast("link_map*") Pointer dlfo_link_map(); public native dl_find_object dlfo_link_map(Pointer setter);
  public native Pointer dlfo_eh_frame(); public native dl_find_object dlfo_eh_frame(Pointer setter);		/* Exception handling data of the object.  */
// # if DLFO_STRUCT_HAS_EH_DBASE
// # endif
// # if DLFO_STRUCT_HAS_EH_COUNT
// # endif
  public native @Cast("unsigned long long int") long __dflo_reserved(int i); public native dl_find_object __dflo_reserved(int i, long setter);
  @MemberGetter public native @Cast("unsigned long long int*") LongPointer __dflo_reserved();
}
