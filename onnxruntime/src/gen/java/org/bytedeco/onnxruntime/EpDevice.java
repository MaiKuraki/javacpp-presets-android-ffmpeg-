// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


/** \brief Mutable EpDevice that is created by EpApi users.
 */
@Namespace("Ort") @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class EpDevice extends EpDeviceImpl {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public EpDevice(Pointer p) { super(p); }

  /** Take ownership of a pointer created by C API */
  public EpDevice(OrtEpDevice p) { super((Pointer)null); allocate(p); }
  private native void allocate(OrtEpDevice p);

  /** \brief Wraps OrtEpApi::CreateEpDevice */
  public EpDevice(@ByRef OrtEpFactory ep_factory, @Cast("Ort::ConstHardwareDevice*") @ByRef Pointer hardware_device,
             @ByVal(nullValue = "Ort::ConstKeyValuePairs{}") @Cast("Ort::ConstKeyValuePairs*") KeyValuePairsImpl ep_metadata, @ByVal(nullValue = "Ort::ConstKeyValuePairs{}") @Cast("Ort::ConstKeyValuePairs*") KeyValuePairsImpl ep_options) { super((Pointer)null); allocate(ep_factory, hardware_device, ep_metadata, ep_options); }
  private native void allocate(@ByRef OrtEpFactory ep_factory, @Cast("Ort::ConstHardwareDevice*") @ByRef Pointer hardware_device,
             @ByVal(nullValue = "Ort::ConstKeyValuePairs{}") @Cast("Ort::ConstKeyValuePairs*") KeyValuePairsImpl ep_metadata, @ByVal(nullValue = "Ort::ConstKeyValuePairs{}") @Cast("Ort::ConstKeyValuePairs*") KeyValuePairsImpl ep_options);
  public EpDevice(@ByRef OrtEpFactory ep_factory, @Cast("Ort::ConstHardwareDevice*") @ByRef Pointer hardware_device) { super((Pointer)null); allocate(ep_factory, hardware_device); }
  private native void allocate(@ByRef OrtEpFactory ep_factory, @Cast("Ort::ConstHardwareDevice*") @ByRef Pointer hardware_device);
}
