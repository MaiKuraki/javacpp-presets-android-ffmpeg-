// Targeted by JavaCPP version 1.5.12: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;

@Name("Ort::detail::KeyValuePairsImpl<OrtKeyValuePairs>") @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class KeyValuePairsImpl extends BaseKeyValuePairs {
    static { Loader.load(); }
    /** Default native constructor. */
    public KeyValuePairsImpl() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public KeyValuePairsImpl(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public KeyValuePairsImpl(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public KeyValuePairsImpl position(long position) {
        return (KeyValuePairsImpl)super.position(position);
    }
    @Override public KeyValuePairsImpl getPointer(long i) {
        return new KeyValuePairsImpl((Pointer)this).offsetAddress(i);
    }


  public native @Cast("const char*") BytePointer GetValue(@Cast("const char*") BytePointer key);
  public native String GetValue(String key);

  // get the pairs in unordered_map. needs to copy to std::string so the hash works as expected
  public native @ByVal StringStringMap GetKeyValuePairs();
  // get the pairs in two vectors. entries will be 1:1 between keys and values. avoids copying to std::string
  public native void GetKeyValuePairs(@Cast("const char**") @StdVector PointerPointer keys, @Cast("const char**") @StdVector PointerPointer values);
  public native void GetKeyValuePairs(@Cast("const char**") @StdVector @ByPtrPtr BytePointer keys, @Cast("const char**") @StdVector @ByPtrPtr BytePointer values);
  public native void GetKeyValuePairs(@Cast("const char**") @StdVector @ByPtrPtr ByteBuffer keys, @Cast("const char**") @StdVector @ByPtrPtr ByteBuffer values);
  public native void GetKeyValuePairs(@Cast("const char**") @StdVector @ByPtrPtr byte[] keys, @Cast("const char**") @StdVector @ByPtrPtr byte[] values);
}
