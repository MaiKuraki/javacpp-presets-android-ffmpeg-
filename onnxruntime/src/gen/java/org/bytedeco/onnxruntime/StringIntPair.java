// Targeted by JavaCPP version 1.5.12: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;

@NoOffset @Name("std::pair<std::string,int>") @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class StringIntPair extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public StringIntPair(Pointer p) { super(p); }
    public StringIntPair(BytePointer firstValue, int secondValue) { this(); put(firstValue, secondValue); }
    public StringIntPair(String firstValue, int secondValue) { this(); put(firstValue, secondValue); }
    public StringIntPair()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef StringIntPair put(@ByRef StringIntPair x);


    @MemberGetter public native @StdString BytePointer first(); public native StringIntPair first(BytePointer first);
    @MemberGetter public native int second();  public native StringIntPair second(int second);
    @MemberSetter @Index public native StringIntPair first(@StdString String first);

    public StringIntPair put(BytePointer firstValue, int secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }

    public StringIntPair put(String firstValue, int secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }
}

