// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


@Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class OrtEpApi extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public OrtEpApi() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public OrtEpApi(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public OrtEpApi(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public OrtEpApi position(long position) {
        return (OrtEpApi)super.position(position);
    }
    @Override public OrtEpApi getPointer(long i) {
        return new OrtEpApi((Pointer)this).offsetAddress(i);
    }

  /** \brief Create an OrtEpDevice for the EP and an OrtHardwareDevice.
   * @param ep_factory [in] Execution provider factory that is creating the instance.
   * @param hardware_device [in] Hardware device that the EP can utilize.
   * @param ep_metadata [in] Optional OrtKeyValuePairs instance for execution provider metadata that may be used
   *                        during execution provider selection and passed to CreateEp.
   *                        ep_device will copy this instance and the user should call ReleaseKeyValuePairs.
   * @param ep_options [in]  Optional OrtKeyValuePairs instance for execution provider options that will be added
   *                        to the Session configuration options if the execution provider is selected.
   *                        ep_device will copy this instance and the user should call ReleaseKeyValuePairs.
   * @param ep_device OrtExecutionDevice that is created.
   *
   * @since Version 1.22.
   */
  public native OrtStatus CreateEpDevice( OrtEpFactory ep_factory,
                    @Const OrtHardwareDevice hardware_device,
                    @Const OrtKeyValuePairs ep_metadata,
                    @Const OrtKeyValuePairs ep_options,
                    @Cast("OrtEpDevice**") PointerPointer ep_device);
  public native OrtStatus CreateEpDevice( OrtEpFactory ep_factory,
                    @Const OrtHardwareDevice hardware_device,
                    @Const OrtKeyValuePairs ep_metadata,
                    @Const OrtKeyValuePairs ep_options,
                    @ByPtrPtr OrtEpDevice ep_device);

  public native void ReleaseEpDevice(OrtEpDevice input);
}
