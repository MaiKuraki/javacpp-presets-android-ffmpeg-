// Targeted by JavaCPP version 1.5.12: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


/** \brief LoraAdapter holds a set of Lora Parameters loaded from a single file */
@Namespace("Ort") @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class LoraAdapter extends BaseLoraAdapter {
    static { Loader.load(); }
    /** Default native constructor. */
    public LoraAdapter() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public LoraAdapter(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public LoraAdapter(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public LoraAdapter position(long position) {
        return (LoraAdapter)super.position(position);
    }
    @Override public LoraAdapter getPointer(long i) {
        return new LoraAdapter((Pointer)this).offsetAddress(i);
    }

  /** \brief Wraps OrtApi::CreateLoraAdapter
   * 
   *  The function attempts to load the adapter from the specified file
   *  @param adapter_path The path to the Lora adapter
   *  @param allocator optional pointer to a device allocator. If nullptr, the data stays on CPU. It would still
   *         be copied to device if required by the model at inference time. */
  
  ///
  public static native @ByVal LoraAdapter CreateLoraAdapter(@Cast("const std::basic_string<ORTCHAR_T>*") @ByRef Pointer adapter_path,
                                         OrtAllocator allocator);

  /** \brief Wraps OrtApi::CreateLoraAdapterFromArray
   * 
   *  The function attempts to load the adapter from the specified byte array.
   *  @param bytes The byte array containing file LoraAdapter format
   *  @param num_bytes The number of bytes in the byte array
   *  @param allocator optional pointer to a device allocator. If nullptr, the data stays on CPU. It would still
   *         be copied to device if required by the model at inference time. */
  public static native @ByVal LoraAdapter CreateLoraAdapterFromArray(@Const Pointer bytes, @Cast("size_t") long num_bytes,
                                                  OrtAllocator allocator);
}
