// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;
import org.bytedeco.javacpp.chrono.*;
import static org.bytedeco.javacpp.global.chrono.*;

import static org.bytedeco.pytorch.global.torch.*;


// Structure for keeping timing information
@Namespace("c10::CachingAllocator") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class DurationStat extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public DurationStat() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public DurationStat(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DurationStat(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public DurationStat position(long position) {
        return (DurationStat)super.position(position);
    }
    @Override public DurationStat getPointer(long i) {
        return new DurationStat((Pointer)this).offsetAddress(i);
    }

  public native void increase(@Cast("int64_t") long amount);

  public native void reset_accumulated();

  public native void reset_peak();

  public native @Cast("int64_t") long total(); public native DurationStat total(long setter);
  public native @Cast("int64_t") long max(); public native DurationStat max(long setter);
  public native @Cast("int64_t") long min(); public native DurationStat min(long setter);
  public native @Cast("int64_t") long count(); public native DurationStat count(long setter);
}
