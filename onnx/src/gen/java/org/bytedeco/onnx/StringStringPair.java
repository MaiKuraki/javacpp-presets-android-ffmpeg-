// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnx;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.onnx.global.onnx.*;

@NoOffset @Name("std::pair<std::string,std::string>") @Properties(inherit = org.bytedeco.onnx.presets.onnx.class)
public class StringStringPair extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public StringStringPair(Pointer p) { super(p); }
    public StringStringPair(BytePointer firstValue, BytePointer secondValue) { this(); put(firstValue, secondValue); }
    public StringStringPair(String firstValue, String secondValue) { this(); put(firstValue, secondValue); }
    public StringStringPair()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef StringStringPair put(@ByRef StringStringPair x);


    @MemberGetter public native @StdString BytePointer first(); public native StringStringPair first(BytePointer first);
    @MemberGetter public native @StdString BytePointer second();  public native StringStringPair second(BytePointer second);
    @MemberSetter @Index public native StringStringPair first(@StdString String first);
    @MemberSetter @Index public native StringStringPair second(@StdString String second);

    public StringStringPair put(BytePointer firstValue, BytePointer secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }

    public StringStringPair put(String firstValue, String secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }
}

